{"created": "2025-10-20T17:12:43.865374", "current_version": "", "project": "ESP32 Template", "versions": {"": {"created": "2025-10-20T17:12:43.865362", "creator": {"program": "sphinx_needs", "version": "6.0.1"}, "needs": {"SPEC_CFG_API_1": {"acceptance_criteria": "", "arch": {}, "avatar": "", "closed_at": "", "completion": null, "constraints": [], "constraints_error": null, "constraints_passed": true, "constraints_results": {}, "content": "**Description:** Minimal, type-safe API for configuration management supporting uint16 and string types only.\n\n**Core API Functions:**\n\n.. code-block:: c\n\n   // Lifecycle management\n   esp_err_t config_init(void);\n   esp_err_t config_load_from_nvs(system_config_t* config);\n   esp_err_t config_save_to_nvs(const system_config_t* config);\n   esp_err_t config_factory_reset(void);\n\n   // Type-safe parameter setters (validation at write-time)\n   esp_err_t config_set_uint16(config_param_id_t param, uint16_t value);\n   esp_err_t config_set_string(config_param_id_t param, const char* value);\n\n   // Type-safe parameter getters (read from runtime config)\n   esp_err_t config_get_uint16(config_param_id_t param, uint16_t* value);\n   esp_err_t config_get_string(config_param_id_t param, char* value, size_t max_len);\n\n   // Bulk validation (before NVS persistence)\n   esp_err_t config_validate(const system_config_t* config,\n                             char* error_msg, size_t msg_len);\n\n**Typical Usage Pattern:**\n\n.. code-block:: c\n\n   // Application updates parameters with immediate validation\n   if (config_set_string(CONFIG_WIFI_SSID, user_input) != ESP_OK) {\n       ESP_LOGE(TAG, \"SSID invalid\");\n       return;\n   }\n\n   if (config_set_string(CONFIG_WIFI_PASSWORD, password_input) != ESP_OK) {\n       ESP_LOGE(TAG, \"Password invalid\");\n       return;\n   }\n\n   // Validate complete configuration before saving\n   char error_msg[128];\n   if (config_validate(&runtime_config, error_msg, sizeof(error_msg)) != ESP_OK) {\n       ESP_LOGE(TAG, \"Configuration invalid: %s\", error_msg);\n       return;\n   }\n\n   // Save to NVS (system reset follows)\n   config_save_to_nvs(&runtime_config);\n\n**Thread Safety:** All functions protected by FreeRTOS mutex with configurable timeout.\n\n**Important Note:** Parameter changes do not take effect until system restarts. Dynamic parameter application is not guaranteed. This is by design: validation at setter time prevents invalid states from propagating into NVS.\n\n**Design Rationale:**\n\n- **Type Safety**: Enum + typed setters prevent type confusion and buffer overflows\n- **Validation at Gate**: String parameters length-checked immediately before storage\n- **Simple & Predictable**: Two type-safe functions instead of per-parameter getter/setter explosion\n- **Pragmatic for Embedded C**: Minimal abstraction, direct structure access with safety guardrails\n- **Easy to Extend**: Add new parameters to enum and update validation rules only", "created_at": "", "docname": "12_design/config-manager", "doctype": ".rst", "duration": null, "external_css": "external_link", "external_url": null, "has_dead_links": false, "has_forbidden_dead_links": false, "id": "SPEC_CFG_API_1", "id_prefix": "", "is_external": false, "is_import": false, "is_modified": false, "jinja_content": false, "layout": null, "lineno": 227, "links": ["REQ_CFG_5", "REQ_CFG_6"], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": null, "parent_needs": [], "parent_needs_back": [], "parts": {}, "post_content": null, "post_template": null, "pre_content": null, "pre_template": null, "prefix": "", "priority": "", "query": "", "rationale": "", "section_name": "API Design", "sections": ["API Design", "Configuration Manager Design Specification"], "service": "", "signature": null, "specific": "", "status": "approved", "style": null, "tags": ["api", "interface"], "template": null, "title": "Configuration API Interface", "type": "spec", "type_name": "Design Specification", "updated_at": "", "url": "", "url_postfix": "", "user": ""}}, "needs_amount": 1}}}