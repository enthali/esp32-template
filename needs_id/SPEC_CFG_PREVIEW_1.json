{"created": "2025-10-20T17:17:51.442373", "current_version": "", "project": "ESP32 Template", "versions": {"": {"created": "2025-10-20T17:17:51.442356", "creator": {"program": "sphinx_needs", "version": "6.0.1"}, "needs": {"SPEC_CFG_PREVIEW_1": {"acceptance_criteria": "", "arch": {}, "avatar": "", "closed_at": "", "completion": null, "constraints": [], "constraints_error": null, "constraints_passed": true, "constraints_results": {}, "content": "**Description:** Configuration changes validated immediately but only persisted after system reset.\n\n**Parameter Update Lifecycle:**\n\n.. code-block:: text\n\n   1. User updates parameter via web UI\n      \u2193\n   2. POST /api/config/param with {param, type, value}\n      \u2193\n   3. config_set_string/uint16() \u2192 Setter validates THIS parameter\n      \u2193\n   4. If invalid \u2192 error response with details \u2192 STOP\n   5. If valid \u2192 stored in runtime config (RAM)\n      \u2193\n   6. config_validate() \u2192 validate entire config for consistency\n      \u2193\n   7. If invalid \u2192 error response with details \u2192 rollback runtime state \u2192 STOP\n   8. If valid \u2192 response OK \"Changes staged, ready to apply\"\n      \u2193\n   9. User can update more parameters (go to step 1) or click \"Apply & Save\"\n      \u2193\n  10. POST /api/config/apply\n      \u2193\n  11. config_save_to_nvs() persists to NVS\n      \u2193\n  12. System reset (to apply changes consistently)\n\n**Key Design Decisions:**\n\n1. **Immediate Post-Save Validation**: Every parameter change validated against entire config immediately (step 6-8). User gets feedback about which parameter caused issues, preventing confusion about what went wrong.\n\n2. **Staged Changes Before Apply**: Parameters can be updated multiple times (steps 1-9). Each update validates individually and against full config. User sees all issues immediately.\n\n3. **Separate Apply Step**: Actual NVS persistence happens only on explicit \"Apply & Save\" (steps 10-12). Allows user to review all staged changes before committing.\n\n4. **Reset After Save**: Ensures all components see new configuration on boot and prevents inconsistent state.\n\n**Design Rationale:**\n\n- **Validation Transparency**: User always knows if their changes are valid and why they failed\n- **Multiple Parameter Updates**: Common workflow (change WiFi SSID + password together)\n- **Safety**: Reset-after-save is pragmatic for embedded systems vs. complex hot-reloading\n- **Simple Implementation**: Two-phase approach (stage \u2192 apply) without dynamic reconfiguration", "created_at": "", "docname": "12_design/config-manager", "doctype": ".rst", "duration": null, "external_css": "external_link", "external_url": null, "has_dead_links": false, "has_forbidden_dead_links": false, "id": "SPEC_CFG_PREVIEW_1", "id_prefix": "", "is_external": false, "is_import": false, "is_modified": false, "jinja_content": false, "layout": null, "lineno": 428, "links": ["REQ_CFG_8"], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": null, "parent_needs": [], "parent_needs_back": [], "parts": {}, "post_content": null, "post_template": null, "pre_content": null, "pre_template": null, "prefix": "", "priority": "", "query": "", "rationale": "", "section_name": "Web Interface Design", "sections": ["Web Interface Design", "Configuration Manager Design Specification"], "service": "", "signature": null, "specific": "", "status": "approved", "style": null, "tags": ["web", "ui", "lifecycle"], "template": null, "title": "Real-time Configuration Updates", "type": "spec", "type_name": "Design Specification", "updated_at": "", "url": "", "url_postfix": "", "user": ""}}, "needs_amount": 1}}}