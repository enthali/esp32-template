{"created": "2025-10-20T16:46:21.026043", "current_version": "", "project": "ESP32 Template", "versions": {"": {"created": "2025-10-20T16:46:21.026026", "creator": {"program": "sphinx_needs", "version": "6.0.1"}, "needs": {"SPEC_ARCH_WIFI_1": {"acceptance_criteria": "", "arch": {}, "avatar": "", "closed_at": "", "completion": null, "constraints": [], "constraints_error": null, "constraints_passed": true, "constraints_results": {}, "content": "**Description:** WiFi management with automatic reconnection and AP fallback, including recovery strategy after network loss.\n\n**WiFi Operation Modes:**\n\n1. **Station (STA) Mode**: Connect to existing WiFi network\n2. **Access Point (AP) Mode**: Create configuration network\n3. **Fallback Logic**: Auto-switch to AP if STA fails\n\n**Connection Flow:**\n\n.. code-block:: text\n\n   Boot \u2192 Load NVS Credentials \u2192 STA Connection Attempt\n                                        \u2193 (success)\n                                   STA Connected\n                                        \u2193 (failure after timeout)\n                                   AP Mode + Captive Portal\n                                   (retries STA every 5 min)\n                                        \u2193 (5 min timeout reached)\n                                       Reset & Boot\n\n**AP Mode Failsafe Recovery:**\n\n- **Purpose**: Handle scenarios where network is unavailable after power loss\n- **AP Entry**: System enters AP mode with captive portal when STA connection fails\n- **Retry Strategy**: Attempts to reconnect to configured network every 5 minutes\n- **Recovery Timeout**: After 5 minutes in AP mode without successful STA connection, system performs reset\n- **Rationale**: Prevents indefinite AP mode if network hardware has failed or credentials are invalid; ensures system attempts network recovery periodically\n\n**Credential Management:**\n\n- WiFi SSID/password stored in NVS\n- Factory reset clears credentials\n- Web interface provides credential update\n\n**Status**: \u2705 Complete with NVS integration", "created_at": "", "docname": "12_design/high-level-architecture", "doctype": ".rst", "duration": null, "external_css": "external_link", "external_url": null, "has_dead_links": false, "has_forbidden_dead_links": false, "id": "SPEC_ARCH_WIFI_1", "id_prefix": "", "is_external": false, "is_import": false, "is_modified": false, "jinja_content": false, "layout": null, "lineno": 223, "links": ["REQ_SYS_WEB_1"], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": null, "parent_needs": [], "parent_needs_back": [], "parts": {}, "post_content": null, "post_template": null, "pre_content": null, "pre_template": null, "prefix": "", "priority": "", "query": "", "rationale": "", "section_name": "Data Flow Architecture", "sections": ["Data Flow Architecture", "High-Level Architecture Design Specification"], "service": "", "signature": null, "specific": "", "status": "approved", "style": null, "tags": ["network", "wifi"], "template": null, "title": "WiFi Manager Design Details", "type": "spec", "type_name": "Design Specification", "updated_at": "", "url": "", "url_postfix": "", "user": ""}}, "needs_amount": 1}}}