{"created": "2025-10-20T17:12:43.865528", "current_version": "", "project": "ESP32 Template", "versions": {"": {"created": "2025-10-20T17:12:43.865514", "creator": {"program": "sphinx_needs", "version": "6.0.1"}, "needs": {"SPEC_CFG_VALIDATION_1": {"acceptance_criteria": "", "arch": {}, "avatar": "", "closed_at": "", "completion": null, "constraints": [], "constraints_error": null, "constraints_passed": true, "constraints_results": {}, "content": "**Description:** Parameters validated at two points: immediate setter validation and pre-save bulk validation.\n\n**Validation Strategy:**\n\n1. **Setter-Time Validation** (Immediate):\n\n   .. code-block:: c\n\n      config_set_string(CONFIG_WIFI_SSID, value)\n      // Validates: length 1-32 characters\n\n      config_set_string(CONFIG_WIFI_PASSWORD, value)\n      // Validates: length 0-63 characters (0 = open network)\n\n   Returns ESP_ERR_INVALID_ARG on validation failure, preventing invalid values in runtime config.\n\n2. **Pre-Save Bulk Validation** (Before NVS):\n\n   .. code-block:: c\n\n      config_validate(&config, error_msg, sizeof(error_msg))\n      // Validates entire config for semantic consistency\n      // Example: check WiFi AP max connections is within device capabilities\n\n**WiFi Parameter Constraints:**\n\n- ``CONFIG_WIFI_SSID``: 1-32 characters (IEEE 802.11 max)\n- ``CONFIG_WIFI_PASSWORD``: 0-63 characters (WPA2 max, 0 = open network)\n\n**Design Rationale:**\n\n- **Early Rejection**: Invalid strings rejected at setter, preventing buffer corruption\n- **Simple Rules**: Type constraints only (length for strings)\n- **WiFi Defaults**: Channel, max connections, retry, and timeout configured in `wifi_manager.h`\n- **Extension Pattern**: When adding application parameters, define min/max in parameter table\n\n**Error Handling:**\n\n- Setter validation: Return ``ESP_ERR_INVALID_ARG`` immediately\n- Pre-save validation: Return error message describing what's invalid\n- All errors logged with ``ESP_LOGE`` for debugging", "created_at": "", "docname": "12_design/config-manager", "doctype": ".rst", "duration": null, "external_css": "external_link", "external_url": null, "has_dead_links": false, "has_forbidden_dead_links": false, "id": "SPEC_CFG_VALIDATION_1", "id_prefix": "", "is_external": false, "is_import": false, "is_modified": false, "jinja_content": false, "layout": null, "lineno": 295, "links": ["REQ_CFG_6"], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": null, "parent_needs": [], "parent_needs_back": [], "parts": {}, "post_content": null, "post_template": null, "pre_content": null, "pre_template": null, "prefix": "", "priority": "", "query": "", "rationale": "", "section_name": "API Design", "sections": ["API Design", "Configuration Manager Design Specification"], "service": "", "signature": null, "specific": "", "status": "approved", "style": null, "tags": ["validation", "api"], "template": null, "title": "Parameter Validation Rules", "type": "spec", "type_name": "Design Specification", "updated_at": "", "url": "", "url_postfix": "", "user": ""}}, "needs_amount": 1}}}