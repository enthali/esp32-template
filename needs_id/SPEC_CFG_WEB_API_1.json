{"created": "2025-10-20T16:46:21.023897", "current_version": "", "project": "ESP32 Template", "versions": {"": {"created": "2025-10-20T16:46:21.023881", "creator": {"program": "sphinx_needs", "version": "6.0.1"}, "needs": {"SPEC_CFG_WEB_API_1": {"acceptance_criteria": "", "arch": {}, "avatar": "", "closed_at": "", "completion": null, "constraints": [], "constraints_error": null, "constraints_passed": true, "constraints_results": {}, "content": "**Description:** RESTful HTTP API for configuration management via web interface.\n\n**API Endpoints:**\n\n.. code-block:: text\n\n   GET  /api/config              -> Current configuration (JSON)\n   POST /api/config/param        -> Set single parameter\n   POST /api/config/validate     -> Validate current config before save\n   POST /api/config/apply        -> Apply & save to NVS (triggers reset)\n   POST /api/config/reset        -> Factory reset\n\n**Set Parameter Request:**\n\n.. code-block:: json\n\n   POST /api/config/param\n   Content-Type: application/json\n\n   {\n     \"param\": \"CONFIG_WIFI_SSID\",\n     \"type\": \"string\",\n     \"value\": \"my-network\"\n   }\n\n**Response on Error:**\n\n.. code-block:: json\n\n   {\n     \"status\": \"error\",\n     \"code\": \"INVALID_ARG\",\n     \"message\": \"SSID too long (max 32 characters)\"\n   }\n\n**Get Current Configuration:**\n\n.. code-block:: json\n\n   GET /api/config\n\n   Response:\n   {\n     \"version\": \"1.0\",\n     \"timestamp\": \"2025-07-24T12:34:56Z\",\n     \"config\": {\n       \"wifi_ssid\": \"my-network\",\n       \"wifi_password\": \"***\"\n     }\n   }\n\n**Apply & Save:**\n\n.. code-block:: json\n\n   POST /api/config/apply\n\n   Response (before reset):\n   {\n     \"status\": \"ok\",\n     \"message\": \"Configuration saved, system resetting...\"\n   }\n\n   Then: System reset within 2 seconds\n\n**Design Rationale:**\n\n- **Generic Parameter Endpoint**: Single /api/config/param handles all parameter types\n- **Type Information**: Client specifies type (\"string\", \"uint16\") for clarity\n- **Pre-Save Validation**: /api/config/validate allows testing without reset\n- **Simple & Extensible**: Adding new parameters requires only enum update, no new endpoints\n\n**Authentication:** Currently open (for development). Production deployments should add basic auth or API tokens.", "created_at": "", "docname": "12_design/config-manager", "doctype": ".rst", "duration": null, "external_css": "external_link", "external_url": null, "has_dead_links": false, "has_forbidden_dead_links": false, "id": "SPEC_CFG_WEB_API_1", "id_prefix": "", "is_external": false, "is_import": false, "is_modified": false, "jinja_content": false, "layout": null, "lineno": 347, "links": ["REQ_CFG_7", "REQ_CFG_8", "REQ_CFG_9"], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": null, "parent_needs": [], "parent_needs_back": [], "parts": {}, "post_content": null, "post_template": null, "pre_content": null, "pre_template": null, "prefix": "", "priority": "", "query": "", "rationale": "", "section_name": "Web Interface Design", "sections": ["Web Interface Design", "Configuration Manager Design Specification"], "service": "", "signature": null, "specific": "", "status": "approved", "style": null, "tags": ["web", "api", "rest"], "template": null, "title": "Configuration REST API", "type": "spec", "type_name": "Design Specification", "updated_at": "", "url": "", "url_postfix": "", "user": ""}}, "needs_amount": 1}}}